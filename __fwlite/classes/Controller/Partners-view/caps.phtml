<style>

option.missing {
	color: #aaa;
}

#content .rules .lastcan {
	width: 22px;
	height: 30px;
	float: none;
	padding-left: 8px;
	padding-top: 1px;
	vertical-align: middle;
}


#content table .grey td, #content table .white td {
    height: 30px;
    padding-top: 1px;
    padding-bottom: 1px;
    vertical-align: middle;
    text-align: center;
    padding: 2px 10px;
}

#content table td.first {
    vertical-align: middle;
    border-left: 1px solid #D1D3D6;
    width: 80px;
}
#content table td.lastcan {
    border-right: 1px solid #D1D3D6;
}
#content table tr th {
    border-bottom: 1px solid #D1D3D6;
}

#content table td.first span {
    cursor: pointer;
}

div.rule-argument {
    padding-top: 2px;
    padding-bottom: 8px;
}

.rule-argument-value {
    text-align: center;
    width: 172px !important;
}

#delivery-filters-table {
    display: none;
}

.show-argument-value {
    margin-top: 8px;
}

.custom-combobox {
    width: 177px;
    height: 26px !important;
    position: relative;
    display: inline-block;
    background: white !important;
    padding-bottom: 2px;
}
.custom-combobox-input,.ui-menu-item {
    width:80px;
    height: 24px !important;
    text-decoration: none !important;
    font-weight: normal !important;
    font: -webkit-small-control;
    background: none !important;
    -webkit-border-radius: 0px;
    padding-left: 5px;
}

.custom-combobox-toggle {
    width: 20px;
    position: absolute;
    top: 0;
    bottom: 0;
    padding: 0;
    height: 26px !important;
    background: none !important;
    right: 0;
    margin-right: 0;
}

.ui-autocomplete {
    max-height: 300px;
    overflow-y: auto;   /* prevent horizontal scrollbar */
    overflow-x: hidden; /* add padding to account for vertical scrollbar */
    z-index:1000 !important;
}

.custom-autocomplete-category {
    font-weight: bold;
}

#content table#caps-table input {
    width: 50px;
    height: 25px;
    padding-left: 5px;
    border-radius: 5px;
}
#content table#caps-table select {
    width: 180px;
}

#caps-table .lastcan img {
    cursor: pointer;
}

#add-cap-div div.label {
  float: left;
  width: 30%;
  font-weight: bold;
  padding-top: 5px;
}

#add-cap-div select,#add-cap-div .cap_value {
    width: 200px;
}

/*#add-cap-div .cap_value {
    width: 186px;
}*/

#add-cap-div .start_time, #add-cap-div .end_time {
    width: 90px;
}

#add-cap-div button {
  height: 32px;
  width: 60px;
  background-color: #f6a828;
  color: white;
  font-weight: bold;
  cursor: pointer;
  font-family: inherit;
}

</style>

    <div class="head" id="caps-screen">
        <h2>Partners</h2>

        <div class="breadcrumb">

            <div style="float:left">
                <p><a href="/partners/">Partners &gt;</a> <a href="/partners/edit.html?id=<?php echo $data['id']; ?>"><?php echo escapeHtml($data['name']); ?> &gt;</a> Edit Caps</p>
            </div>
            <div class="clear"></div>
    </div><!--head-->



<form style="margin: 0;" method="POST" id="main-fields-form">
<input type="hidden" name="__nonce" value="<?php echo Session::getSession()->getNonce(); ?>" />
<div class="caps">
    <table id="caps-table" style="width:980px; border:none; border-bottom: 1px solid #D1D3D6;">
        <tbody>
            <tr class="top header">
                <td>
                    Status
                </td>
                <td>
                    Cap Type
                </td>
                <td>
                    Cap Value
                </td>
                <td>
                    Interval
                </td>
                <td>
                    Day Of Week
                </td>
                <td>
                    Time Of Day
                </td>
                <td>
                    
                </td>
            </tr>
            
        </tbody>
    </table>
    <div class="clear"></div>
</div>
<!-- rules -->

<div class="clear"></div>
<div class="addfield">
	<p><a href="#" id="add-new-cap"><img src="/img/icons/add.png" style="margin-bottom: -2px;" /> Add Cap</a></p>
	<div class="clear"></div>
</div><!--addfield-->


<div class="pingtree-form">
<button type="submit" id="submitButton"><img style="width: 16px; height: 16px; margin-right: 8px;" src="<?php echo Config::$urlBase?>img/icons/disk.png" />SAVE</button>
<button type="submit" name="redir" value="edit"    id="editSettings" ><img style="width: 16px; height: 16px; margin-right: 8px;" src="<?php echo Config::$urlBase?>img/icons/pencil.png"       />Edit Settings</button>
<button type="submit" name="redir" value="fields"  id="editFields"   ><img style="width: 16px; height: 16px; margin-right: 8px;" src="<?php echo Config::$urlBase?>img/icons/table_edit.png" />Edit Fields</button>
<button type="submit" name="redir" value="filters"  id="editRules"   ><img style="width: 16px; height: 16px; margin-right: 8px;" src="<?php echo Config::$urlBase?>img/icons/arrow_branch.png" />Edit Rules</button>
<?php

if (
        ($data['posting_type'] == Model_Partner::POST_TYPE_EMAIL) || 
        ($data['posting_type'] == Model_Partner::POST_TYPE_XML) || 
        ($data['posting_type'] == Model_Partner::POST_TYPE_JSON) ||
        ($data['posting_type'] == Model_Partner::POST_TYPE_XML_FIELD)
    ) {?>
    <button type="submit" name="redir" value="template" id="editTemplate"  ><img style="width: 16px; height: 16px; margin-right: 8px;" src="<?php echo Config::$urlBase?>img/icons/page_edit.png" />Edit Template</button>

<?php } ?>
<button type="button" id="cancelButton" ><img style="width: 16px; height: 16px; margin-right: 8px;" src="<?php echo Config::$urlBase?>img/icons/cross.png"        />Cancel</button>
</div>
</form>

<script type="text/javascript">

var newCounter = 1;
var checkDirty = true;
var newDeliveryRuleStart = 1000;
                
var capTypes = <?php echo json_encode($capTypes); ?>;
var intervals = <?php echo json_encode($intervals); ?>;

var originalState = <?php echo json_encode(array_values($caps)); ?>;

var CAP_TYPE_DELIVERY = '1';
var CAP_TYPE_BUDGET   = '2';
var INTERVAL_DAY_OF_WEEK = '9';
var INTERVAL_TIME_OF_DAY = '10';

function getIntervalSelect(nameSuffix) {
    var result = '<select class="interval" name="interval' + nameSuffix + '">';
    <?php foreach($intervals as $key => $value) {?>
        result += '<option value="' + <?php echo $key ?> + '">' + "<?php echo $value ?>" + '</option>'; 
    <?php } ?>
    result += '</select>';
    return result;
}

function getCapTypeSelect(nameSuffix) {
    var result = '<select class="cap_type" name="cap_type' + nameSuffix +'">';
    <?php foreach($capTypes as $key => $value) {?>
        result += '<option value="' + <?php echo $key ?> + '">' + "<?php echo $value ?>" + '</option>'; 
    <?php } ?>
    result += '</select>';
    return result;
}

function getDayInWeekSelect(nameSuffix) {
    var daysInWeek = {
        'Mon': 'Monday',
        'Tue': 'Tuesday',
        'Wed': 'Wednesday',
        'Thu': 'Thursday',
        'Fri': 'Friday',
        'Sat': 'Saturday',
        'Sun': 'Sunday'
    };
    var result = '<select class="daysInWeek" name="day_of_week' + nameSuffix + '">';
    for (var i in daysInWeek) {
        if (typeof daysInWeek[i] === 'string'){
            result += '<option value="' + i + '">' + daysInWeek[i] + '</option>';
        }
    } 
    result += '</select>';
    return result;
}


$(window).bind('beforeunload', function() {
	if (checkDirty && pageStateChanged()) {
		return 'Your changes are not saved - are you sure you wish to leave this page?';
	}
	checkDirty = true;
});

$(document).ready(function() {
	$('#cancelButton').click(function() {
		checkDirty = false;
		document.location.href=<?php echo "'" . App::getFrontController()->urlFor($this) . "'"; ?>;
	});
        
        $('#add-cap-div').dialog({
            modal: true,
            title: 'Add a new cap',
            minWidth: 400, 
            autoOpen: false
        });
    
        $('#add-new-cap').click(function(e){
           e.preventDefault();
           $('#add-cap-div').dialog('open');
        });
        
        $('#add-cap-type').html(getCapTypeSelect(''));
        $('#add-cap-interval').html(getIntervalSelect(''));
        $('#add-cap-day-of-week').html(getDayInWeekSelect(''));
        
        $('#add-cap-time-of-day .start_time').val('00:00');
        $('#add-cap-time-of-day .start_time').timepicker({'timeFormat': 'H:i'});
        $('#add-cap-time-of-day .end_time').val('23:59');
        $('#add-cap-time-of-day .end_time').timepicker({'timeFormat': 'H:i'});
        
        $('#add-cap-type .cap_type').change(function(){
            showHideAddCapDivComponent();
        });
        
        $('#add-cap-interval .interval').change(function(){
            showHideAddCapDivComponent();
        });
        showHideAddCapDivComponent();
        
        $('#add-cap-cancel-button').click(function(){
            $('#add-cap-div').dialog('close');
        });
        
        $('#add-cap-submit-button').click(function(){
            
            var capType     = $('#add-cap-type .cap_type').val();
            var capValue    = $('#add-cap-value .cap_value').val();
            var interval    = $('#add-cap-interval .interval').val();
            var dayOfWeek   = $('#add-cap-day-of-week .daysInWeek').val();
            var startTime   = $('#add-cap-time-of-day .start_time').val();
            var endTime     = $('#add-cap-time-of-day .end_time').val();
            
            // validate
            if (capValue.match(/^[0-9]+$/) == null ) {
                $('#add-cap-div-error').html('Invalid cap value').show();
                return false;
            }
            if (interval === INTERVAL_TIME_OF_DAY && startTime.match(/^[0-9]{2}:[0-9]{2}$/) == null ) {
                $('#add-cap-div-error').html('Invalid start time').show();
                return false;
            }
            if (interval === INTERVAL_TIME_OF_DAY && endTime.match(/^[0-9]{2}:[0-9]{2}$/) == null ) {
                $('#add-cap-div-error').html('Invalid end time').show();
                return false;
            }
            
            addCap(1, newCounter++, 1, capType, capValue, interval, dayOfWeek, startTime, endTime);
            
            $('#add-cap-type .cap_type').val('1');
            $('#add-cap-value .cap_value').val('0');
            $('#add-cap-interval .interval').val('9');
            $('#add-cap-day-of-week .daysInWeek').val('Mon');
            $('#add-cap-time-of-day .start_time').val('00:00');
            $('#add-cap-time-of-day .end_time').val('23:59');
            
            $('#add-cap-div-error').hide();
            showHideAddCapDivComponent();
            $('#add-cap-div').dialog('close');
        });
         
	$('#main-fields-form').submit(function(e) {checkDirty = false; return checkCaps(e);});
        
        <?php foreach ($caps as $cap) { 
            $timeRange = !empty($cap['time_of_day']) ? $cap['time_of_day'] : '00:00-23:59';
            $timePoints = explode('-', $timeRange);
            $startTime = !empty($timePoints[0]) ? $timePoints[0] : '00:00';
            $endTime = !empty($timePoints[1]) ? $timePoints[1] : '23:59';
            echo "addCap(0, '$cap[id]', $cap[is_active], '$cap[cap_type]', '$cap[cap_value]', '$cap[interval]', '$cap[day_of_week]', '$startTime', '$endTime');";
        } ?>

//	for(var i = 0; i < originalState.length; i++) {
//		var arr = originalState[i];
//		addDeliveryFilter(0, arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], i);
//	};
        
        $('#pingTab').click(function() {
            if ($(this).hasClass('current')) {
                return false;
            }

            $('#main-fields-form').append('<input type="hidden" name="redir" value="ping">');
            $('#main-fields-form').submit();
        });

        $('#postTab').click(function() {
            if ($(this).hasClass('current')) {
                return false;
            }

            $('#main-fields-form').append('<input type="hidden" name="redir" value="post">');
            $('#main-fields-form').submit();
        });
        
        
        <?php if ($data['ping_post_type'] == Model_Partner::PING_POST_TYPE_PING): ?>
            $(".filter-action option[value='2']").remove();
        <?php endif; ?>
});

function addNewBlankCap() {
        newDeliveryRuleStart ++;
	addCap(1, newCounter++, 1, '1', '0', '9', 'Mo', '00:00', '23:59');
};

function addCap(isNew, id, isActive, capType, capValue, interval, dayInWeek, startTime, endTime) {
    var nameSuffix = (isNew ? '[new]' : '[old]') + '[' + id + ']';
    var html = "\n\t<tr>\n\t\t<td class=\"first\">";
    html += '<input type="hidden" id="is-active' + nameSuffix + '" name="is_active' + nameSuffix + '"' + (isActive ? ' value="1"' : ' value="0"') + '>';
    html += '<span class="' + (isActive ? 'active' : 'inactive') + '">' + (isActive ? 'Active' : 'Inactive') + "</span></td>\n";

    html += "\t\t<td>" + getCapTypeSelect(nameSuffix) + "</td>\n\n";

    html += '<td> <span class="currency"> &nbsp;&nbsp; </span> <input class="cap_value" name="cap_value' + nameSuffix + '" value="' + capValue +'"></td>';

    html += '<td>' + getIntervalSelect(nameSuffix) + '</td>';

    html += '<td>' + getDayInWeekSelect(nameSuffix) + '</td>';

    html += '<td>' + '<input class="start_time" name="start_time' + nameSuffix + '" value="' + startTime + '"> ' +
                     ' <input class="end_time" name="end_time' + nameSuffix + '" value="' + endTime + '">' + '</td>';
    html += '<td class="lastcan" style="vertical-align: middle;">' + 
            '<img src="/img/icons/cross.png" title="Delete this cap" onclick="deleteRow($(this));">'
            '</td>'
    html += '</tr>'

    $('#caps-table tbody').append(html);
    $('#caps-table tbody tr:last .cap_type').val(capType);
    $('#caps-table tbody tr:last .interval').val(interval);
    $('#caps-table tbody tr:last .daysInWeek').val(dayInWeek);
    $('#caps-table tbody tr:last .start_time').timepicker({'timeFormat': 'H:i'});
    $('#caps-table tbody tr:last .end_time').timepicker({'timeFormat': 'H:i'});
    $('#caps-table tbody tr:last td.first span').click(toggleActiveState);
    
    showHideRowComponent($('#caps-table tbody tr:last'));
    updateOddEvenTRs();
    $('#caps-table tbody tr:last').change(function(){
        showHideRowComponent($(this));
    });
};

function showHideRowComponent($row) {
    var capType = $row.find('.cap_type').val();
    if (capType === CAP_TYPE_DELIVERY) {
        $row.find('.currency').html("&nbsp;&nbsp;");
    } else {
        $row.find('.currency').html('$');
    }
    
    var interval = $row.find('.interval').val();
    if (interval === INTERVAL_DAY_OF_WEEK) {
        $row.find('.daysInWeek').show();
        $row.find('.start_time').hide();
        $row.find('.end_time').hide();
    } else if (interval === INTERVAL_TIME_OF_DAY) {
        $row.find('.daysInWeek').show();
        $row.find('.start_time').show();
        $row.find('.end_time').show();
    } else {
        $row.find('.daysInWeek').hide();
        $row.find('.start_time').hide();
        $row.find('.end_time').hide();
    }
}

function showHideAddCapDivComponent() {
    var capType = $('#add-cap-type .cap_type').val();
    if (capType === CAP_TYPE_DELIVERY) {
        $('#add-cap-div .currency').html("&nbsp;&nbsp;");
    } else {
        $('#add-cap-div .currency').html('$');
    }
    
    var interval = $('#add-cap-interval .interval').val();
    if (interval === INTERVAL_DAY_OF_WEEK) {
        $('#add-cap-day-of-week').parent().show();
        $('#add-cap-time-of-day').parent().hide();
    } else if (interval === INTERVAL_TIME_OF_DAY) {
        $('#add-cap-day-of-week').parent().show();
        $('#add-cap-time-of-day').parent().show();
    } else {
        $('#add-cap-day-of-week').parent().hide();
        $('#add-cap-time-of-day').parent().hide();
    }
}

function toggleActiveState() {
	var el = $(this).parent().find('input[type="hidden"]');
	if (el.val() == '0') {
		el.val('1');
		$(this).removeClass('inactive');
		$(this).addClass('active');
		$(this).text('Active');
	} else {
		el.val('0');
		$(this).removeClass('active');
		$(this).addClass('inactive');
		$(this).text('Inactive');
	}

};

function updateOddEvenTRs() {
	var isOdd = false;
	var empty = true;
	$('#caps-table tr').not('.header').each(function() {
		empty = false;
		$(this).removeClass('white');
		$(this).removeClass('grey');
		$(this).addClass(isOdd ? 'grey' : 'white');
		isOdd = !isOdd;
	});

	if (empty) {
		$('#caps-table').hide();
	} else {
		$('#caps-table').show();
	}
};

function pageStateChanged() {
	var trs = $('#caps-table tbody tr').not('.header');
	if (trs.length != originalState.length) {
		return true;
	}
	var changed = false; var i = 0;
	trs.each(function() {
            if (changed) {
                return;
            }
            var arr = originalState[i++];
            
            var capType = $(this).find('select.cap_type');
            if (capType.val() != arr.cap_type) {
                changed = true;
                return;
            }
            
            var capValue = $(this).find('input.cap_value');
            if (capValue.val() != arr.cap_value) {
                changed = true;
                return;
            }

            var interval = $(this).find('select.interval');
            if (interval.val() != arr.interval) {
                changed = true;
                return;
            }
            
            if (arr.interval === INTERVAL_DAY_OF_WEEK || arr.interval === INTERVAL_TIME_OF_DAY) {
                var daysInWeek = $(this).find('select.daysInWeek');
                if (daysInWeek.val() != arr.day_of_week) {
                    changed = true;
                    return;
                }
            }
            
            var active = ($(this).find('input[name^="is_active"]').val() == '1') ? 1 : 0;
            if (active != arr.is_active) {
                    changed = true;
                    return;
            }
	});
	return changed;
};

function deleteRow(field) {
	if (confirm('Delete this cap?')) {
		field.parent().parent().remove();
		updateOddEvenTRs();
	}
};

function getSelectOptions(options, id) {
	var ret = '';
	for (var i = 0; i < options.length; i++) {
		var arr = options[i];
		// var s = (arr[0] == id) ? ' selected="selected"' : '';
		ret += '<option value="' + arr[0] + '">' + arr[1] + "</option>\n";
	}
	return ret;
};


function checkCaps(e) {
    var trs = $('#caps-table tbody tr').not('.header');
    var OK = true;
    trs.each(function() {
        if (!OK) {
            return;
        }
        var cap_value = $(this).find('input.cap_value').val();
        var arr = cap_value.match(/^[0-9]+$/);
        if (arr == null) {
            alert('Cap value must be numeric');
            $(this).find('input.cap_value').focus();
            OK = false;
            return;
        }
    });

    if (!OK) {
        e.preventDefault();
    }
    return OK;
};

// combo box
(function( $ ) {
    $.widget( "custom.combobox", {
        _create: function() {
            this.wrapper = $( "<span>" )
                .addClass( "custom-combobox" )
                .insertAfter( this.element );
            this.element.hide();
            this._createAutocomplete();
            this._createShowAllButton();
        },
        _createAutocomplete: function() {
            var selected = this.element.find( ":selected" ),
                value = selected.val() ? selected.text() : "";
            this.input = $( "<input>" )
                .appendTo( this.wrapper )
                .val( value )
                .attr( "title", "" )
                .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
                .autocomplete({
                    delay: 0,
                    minLength: 0,
                    source: $.proxy( this, "_source" )
                })
                .tooltip({
                    tooltipClass: "ui-state-highlight"
                });
            this._on( this.input, {
                autocompleteselect: function( event, ui ) {
                    ui.item.option.selected = true;
                    this._trigger( "select", event, {
                        item: ui.item.option
                    });
                },
                autocompletechange: "_removeIfInvalid"
            });

            this.input.data("uiAutocomplete")._renderMenu = function(ul, items) {
                var self = this,
                    currentCategory = "";
                $.each(items, function(index, item) {
                    if (item.category != currentCategory) {
                        if (item.category) {
                            ul.append("<li class='custom-autocomplete-category'>" + item.category + "</li>");
                        }
                        currentCategory = item.category;
                    }
                    self._renderItemData(ul, item);
                });
            };
        },
        _createShowAllButton: function() {
            var input = this.input,
                wasOpen = false;
            $( "<a>" )
                .attr( "tabIndex", -1 )
                .tooltip()
                .appendTo( this.wrapper )
                .button({
                    icons: {
                        primary: "ui-icon-triangle-1-s"
                    },
                    text: false
                })
                .removeClass( "ui-corner-all" )
                .addClass( "custom-combobox-toggle ui-corner-right" )
                .mousedown(function() {
                    wasOpen = input.autocomplete( "widget" ).is( ":visible" );
                })
                .click(function() {
                    input.focus();

        	    // Close if already visible
                    if ( wasOpen ) {
                        return;
                    }

		    // Pass empty string as value to search for, displaying all results
                    input.autocomplete( "search", "" );
                });
        },
        _source: function( request, response ) {
            var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
            response( this.element.find( "option" ).map(function() {
                var text = $( this ).text();
                if ( this.value && ( !request.term || matcher.test(text) ) )
                    return {
                        label: text,
                        value: text,
                        option: this,
                        category: $(this).closest("optgroup").attr("label")
                    };
            }) );
        },
	
        _removeIfInvalid: function( event, ui ) {

	    // Selected an item, nothing to do
            if ( ui.item ) {
                return;
            }

	    // Search for a match (case-insensitive)
            var value = this.input.val(),
                valueLowerCase = value.toLowerCase(),
                valid = false;
            this.element.find( "option" ).each(function() {
                if ( $( this ).text().toLowerCase() === valueLowerCase ) {
                    this.selected = valid = true;
                    return false;
                }
            });

            // Found a match, nothing to do
            if ( valid ) {
                return;
            }

            // Remove invalid value
            this.input
                .val( "" )
                .tooltip( "open" );
            this.element.val( "" );
            this._delay(function() {
                this.input.tooltip( "close" ).attr( "title", "" );
            }, 2500 );
            this.input.data( "ui-autocomplete" ).term = "";
        },
        _destroy: function() {
            this.wrapper.remove();
            this.element.show();
        }
    });
      
    // check os
    if (navigator.platform.toLowerCase().indexOf('mac') > -1) {
        $('body').addClass('ios');
    }
  })( jQuery );
  
</script>
<div id="add-cap-div" style="display: none;">
    <div style="margin-top: 10px;">
        <div class="label"><label>Cap Type</label></div>
        <div id="add-cap-type"></div>      
        <div style="clear:both;"></div>
    </div>
    <div style="margin-top: 10px;">
         <div class="label">
             <label>Cap Value</label>
             <span class="currency" style="float: right; margin-right: 2px; font-size: 15px;">$</span>
         </div>    
         <div id="add-cap-value">
             <input class="cap_value" name="cap_value">
         </div>  
         <div style="clear:both;"></div>
    </div>
    <div style="margin-top: 10px;">
         <div class="label"><label>Interval</label></div>    
         <div id="add-cap-interval"></div>     
         <div style="clear:both;"></div>
    </div>
    <div style="margin-top: 10px;">
         <div class="label"><label>Day Of Week</label></div>    
         <div id="add-cap-day-of-week"></div>   
         <div style="clear:both;"></div>
    </div>
    <div style="margin-top: 10px;">
         <div class="label"><label>Time Of Day</label></div>    
         <div id="add-cap-time-of-day">
             <input class="start_time" name="start_time">
             <input class="end_time" name="end_time">
         </div> 
         <div style="clear:both;"></div>
    </div>
    <div class="message" style="margin-top: 10px;">
        <div id="add-cap-div-success" style="color:green;font-weight: bold;display:none;"></div>           
        <div id="add-cap-div-error" style="color:red;font-weight: bold;display:none;"></div>           
    </div>
    <div style="margin-top: 10px;">
        <button id="add-cap-submit-button"> Add </button> 
        <button id="add-cap-cancel-button">Close</button>
    </div>
       
</div>