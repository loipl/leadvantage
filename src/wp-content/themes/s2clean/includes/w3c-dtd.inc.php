<?php
/*
Copyright: © 2009 WebSharks, Inc. ( coded in the USA )
<mailto:support@websharks-inc.com> <http://www.websharks-inc.com/>

Released under the terms of the GNU General Public License.
You should have received a copy of the GNU General Public License,
along with this software. In the main directory, see: /licensing/
If not, see: <http://www.gnu.org/licenses/>.
*/
if (realpath (__FILE__) === realpath ($_SERVER["SCRIPT_FILENAME"]))
	exit ("Do not access this file directly.");
/*
Build the DOCTYPE for the W3C Validator.
It is better to serve pages under a `Strict` DOCTYPE for true cross-browser consistency.
However, WordPress® generated markup does not fully conform to all of the `Strict` standards yet.
So for now, we validate as XHTML 1.0 Transitional; and serve everyone else with a `Strict` DOCTYPE.
*/
if (($ws_theme__temp_s = apply_filters ("ws_theme__doctype", ""))) /* Give filters a chance. */
	echo $ws_theme__temp_s; /* Filters may configure a custom DOCTYPE if they need to. */
/**/
else if (stripos ($_SERVER["HTTP_USER_AGENT"], "w3c_validator") !== false)
	{
		/*
		Caching plugins should be configured NOT to cache: `w3c_validator`.
		We recommend Quick Cache, it comes pre-configured for this behavior.
		http://www.primothemes.com/post/product/quick-cache-plugin-for-wordpress/
		*/
		define ("QUICK_CACHE_ALLOWED", false) . define ("DONOTCACHEPAGE", true);
		/*
		Build the DOCTYPE for the W3C Validator.
		*/
		echo '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"';
		echo ' "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd" [';
		/*
		Here we add support for the class attribute on the HTML tag.
		*/
		echo ' <!ATTLIST html';
		echo ' class CDATA #IMPLIED';
		echo ' >';
		/*
		Here we add support for the target attribute from HTML 4.
		*/
		echo ' <!ATTLIST a';
		echo ' target CDATA #IMPLIED';
		echo ' >';
		echo ' <!ATTLIST form';
		echo ' target CDATA #IMPLIED';
		echo ' >';
		/*
		Here we add support for the spellcheck attribute coming in HTML5.
		*/
		echo ' <!ATTLIST div';
		echo ' spellcheck CDATA #IMPLIED';
		echo ' >';
		/*
		Here we add support for the role attribute generated by WordPress®.
		*/
		echo ' <!ATTLIST div';
		echo ' role CDATA #IMPLIED';
		echo ' >';
		/**/
		echo ' <!ATTLIST span';
		echo ' role CDATA #IMPLIED';
		echo ' >';
		/**/
		echo ' <!ATTLIST form';
		echo ' role CDATA #IMPLIED';
		echo ' >';
		/**/
		echo ' <!ATTLIST ul';
		echo ' role CDATA #IMPLIED';
		echo ' >';
		/**/
		echo ' <!ATTLIST ol';
		echo ' role CDATA #IMPLIED';
		echo ' >';
		/**/
		echo ' <!ATTLIST dl';
		echo ' role CDATA #IMPLIED';
		echo ' >';
		/*
		Here we add partial support for the new HTML5 custom data-* attributes.
		Custom attributes have been used for a long time. Now we can allow them to pass the W3C validator.
		For more information, please visit: http://dev.w3.org/html5/spec/Overview.html#custom-data-attribute
		This adds data-s, and data-s[0-2] to the most popular design elements for XHTML.
		*/
		echo ' <!ATTLIST div';
		echo ' data-s CDATA #IMPLIED';
		echo ' data-s0 CDATA #IMPLIED';
		echo ' data-s1 CDATA #IMPLIED';
		echo ' data-s2 CDATA #IMPLIED';
		echo ' >';
		/**/
		echo ' <!ATTLIST span';
		echo ' data-s CDATA #IMPLIED';
		echo ' data-s0 CDATA #IMPLIED';
		echo ' data-s1 CDATA #IMPLIED';
		echo ' data-s2 CDATA #IMPLIED';
		echo ' >';
		/**/
		echo ' <!ATTLIST form';
		echo ' data-s CDATA #IMPLIED';
		echo ' data-s0 CDATA #IMPLIED';
		echo ' data-s1 CDATA #IMPLIED';
		echo ' data-s2 CDATA #IMPLIED';
		echo ' >';
		/**/
		echo ' <!ATTLIST ul';
		echo ' data-s CDATA #IMPLIED';
		echo ' data-s0 CDATA #IMPLIED';
		echo ' data-s1 CDATA #IMPLIED';
		echo ' data-s2 CDATA #IMPLIED';
		echo ' >';
		/**/
		echo ' <!ATTLIST ol';
		echo ' data-s CDATA #IMPLIED';
		echo ' data-s0 CDATA #IMPLIED';
		echo ' data-s1 CDATA #IMPLIED';
		echo ' data-s2 CDATA #IMPLIED';
		echo ' >';
		/**/
		echo ' <!ATTLIST dl';
		echo ' data-s CDATA #IMPLIED';
		echo ' data-s0 CDATA #IMPLIED';
		echo ' data-s1 CDATA #IMPLIED';
		echo ' data-s2 CDATA #IMPLIED';
		echo ' >';
		/**/
		echo ' <!ATTLIST li';
		echo ' data-s CDATA #IMPLIED';
		echo ' data-s0 CDATA #IMPLIED';
		echo ' data-s1 CDATA #IMPLIED';
		echo ' data-s2 CDATA #IMPLIED';
		echo ' >';
		/**/
		echo ' <!ATTLIST dt';
		echo ' data-s CDATA #IMPLIED';
		echo ' data-s0 CDATA #IMPLIED';
		echo ' data-s1 CDATA #IMPLIED';
		echo ' data-s2 CDATA #IMPLIED';
		echo ' >';
		/**/
		echo ' <!ATTLIST option';
		echo ' data-s CDATA #IMPLIED';
		echo ' data-s0 CDATA #IMPLIED';
		echo ' data-s1 CDATA #IMPLIED';
		echo ' data-s2 CDATA #IMPLIED';
		echo ' >';
		/**/
		echo ' <!ATTLIST input';
		echo ' data-s CDATA #IMPLIED';
		echo ' data-s0 CDATA #IMPLIED';
		echo ' data-s1 CDATA #IMPLIED';
		echo ' data-s2 CDATA #IMPLIED';
		echo ' >';
		/**/
		echo ' <!ATTLIST textarea';
		echo ' data-s CDATA #IMPLIED';
		echo ' data-s0 CDATA #IMPLIED';
		echo ' data-s1 CDATA #IMPLIED';
		echo ' data-s2 CDATA #IMPLIED';
		echo ' >';
		/**/
		echo ' <!ATTLIST img';
		echo ' data-s CDATA #IMPLIED';
		echo ' data-s0 CDATA #IMPLIED';
		echo ' data-s1 CDATA #IMPLIED';
		echo ' data-s2 CDATA #IMPLIED';
		echo ' >';
		/**/
		echo ' <!ATTLIST a';
		echo ' data-s CDATA #IMPLIED';
		echo ' data-s0 CDATA #IMPLIED';
		echo ' data-s1 CDATA #IMPLIED';
		echo ' data-s2 CDATA #IMPLIED';
		echo ' >';
		/**/
		echo ' ]>' . "\n";
	}
/*
It is better to serve pages under a `Strict` DOCTYPE for true cross-browser consistency.
However, WordPress® generated markup does not fully conform to all of the `Strict` standards yet.
So for now, we validate as XHTML 1.0 Transitional; and serve everyone else with a `Strict` DOCTYPE.
*/
else /* Here we use a Strict DOCTYPE for cross-browser consistency. */
	echo '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"' ./**/
	' "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">' . "\n";
?>